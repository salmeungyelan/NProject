{"version":3,"file":"static/js/359.464296ba.chunk.js","mappings":"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","sources":["components/@common/Filter/index.styles.js","components/@common/Filter/index.js","hooks/useFilter.js","pages/Notice/index.styles.js","components/pages/Notice/NoticeList/index.styles.js","components/pages/Notice/NoticeList/index.js","pages/Notice/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport { flexAlignCenter, flexCenter } from 'styles/common';\n\nexport const Body = styled.div`\n\t${flexAlignCenter}\n\tgap: 10px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 16px;\n\t}\n`;\n\nexport const Sort = styled.div`\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.s};\n\t${flexCenter}\n\tgap: 3px;\n\tcolor: ${({ theme, selected }) =>\n\t\tselected ? theme.PALETTE.orange[100] : theme.PALETTE.gray[100]};\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.PALETTE.orange[100]};\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.m};\n\t}\n`;\n","import { useEffect, useState } from 'react';\n\nimport useFilter from 'hooks/useFilter';\nimport useApi from 'hooks/useApi';\n\nimport * as S from './index.styles';\n\nfunction Filter(props) {\n\tconst { onClick, sort } = props;\n\n\tconst { filterName } = useFilter();\n\n\tconst { result } = useApi({\n\t\tpath: `/client/global-constants?typeValue=${filterName}_FILTER`,\n\t\tshouldFetch: true,\n\t});\n\n\tconst [filter, setFilter] = useState([]);\n\n\tuseEffect(() => {\n\t\tif (result.data) {\n\t\t\tsetFilter(result.data.globalConstantList);\n\t\t}\n\t}, [result.data]);\n\n\treturn (\n\t\t<S.Body>\n\t\t\t{filter &&\n\t\t\t\tfilter.map(flt => (\n\t\t\t\t\t<S.Sort\n\t\t\t\t\t\tkey={flt.id}\n\t\t\t\t\t\tdata-value={flt.codeValue}\n\t\t\t\t\t\tselected={sort === flt.codeValue}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t• {flt.codeLabel}\n\t\t\t\t\t</S.Sort>\n\t\t\t\t))}\n\t\t</S.Body>\n\t);\n}\n\nexport default Filter;\n","import { useEffect, useMemo, useState } from 'react';\n\nimport usePathname from './usePathname';\n\nconst useFilter = () => {\n\tconst { path } = usePathname();\n\tconst filterName = useMemo(() => {\n\t\treturn path.toUpperCase().replace(/-/g, '_');\n\t}, [path]);\n\n\tconst [sort, setSort] = useState(`${filterName}_FILTER_01`);\n\n\tuseEffect(() => {\n\t\tsetSort(`${filterName}_FILTER_01`);\n\t}, [path]);\n\n\tconst handelSelectFilter = e => {\n\t\tconst value = e.currentTarget.getAttribute('data-value');\n\n\t\tsetSort(value);\n\t};\n\n\treturn { sort, filterName, handelSelectFilter };\n};\n\nexport default useFilter;\n","import styled, { css } from 'styled-components';\nimport { bodyContainer, flexAlignCenter, flexColumn } from 'styles/common';\n\nexport const Body = styled.div`\n\t${bodyContainer}\n\t${flexColumn}\n\tgap: 32px;\n`;\n\nexport const MainBox = styled.div`\n\t${flexColumn}\n\tgap: 10px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 12px;\n\t}\n`;\n\nexport const Select = styled.div`\n\twidth: 100%;\n\n\t> ul {\n\t\t${flexAlignCenter}\n\t\tborder-bottom: 1px solid ${({ theme }) => theme.PALETTE.gray[0]};\n\t\tposition: relative; /* 자식 요소가 절대 위치를 사용할 수 있도록 설정 */\n\t}\n`;\n\nexport const after = css`\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: -1px; /* ul의 border-bottom과 겹치도록 설정 */\n\t\tborder-bottom: 2px solid ${({ theme }) => theme.PALETTE.orange[100]};\n\t\tz-index: -1;\n\t}\n`;\n\nexport const Li = styled.li`\n\twidth: 41px;\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.s};\n\tcolor: ${({ theme }) => theme.PALETTE.gray[100]};\n\tpadding: 5px 0;\n\ttext-align: center;\n\tposition: relative;\n\tz-index: 1;\n\tcursor: pointer;\n\n\t& input {\n\t\tdisplay: none;\n\t}\n\n\t& label {\n\t\tcursor: pointer;\n\t}\n\n\t&:has(input:checked),\n\t&:hover {\n\t\tcolor: ${({ theme }) => theme.PALETTE.orange[100]};\n\t\t${after}\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 56px;\n\t\tpadding: 6px 0;\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.m};\n\t}\n`;\n\nexport const Div = styled.div`\n\tcursor: pointer;\n\tborder-top: 1px solid ${({ theme }) => theme.PALETTE.gray[0]};\n`;\n","import styled from 'styled-components';\nimport { flexCenter, flexColumn, flexSpaceBetweenCenter } from 'styles/common';\n\nexport const Body = styled.div`\n\t> div:last-child {\n\t\tborder-bottom: 1px solid ${({ theme }) => theme.PALETTE.gray[0]};\n\t}\n`;\n\nexport const Box = styled.div`\n\twidth: 100%;\n\tpadding: 13px 0;\n\n\tborder-top: 1px solid ${({ theme }) => theme.PALETTE.gray[0]};\n\n\t> a,\n\t:visited {\n\t\t${flexColumn}\n\t\tgap: 8px;\n\t\ttext-decoration: none;\n\t}\n`;\n\nexport const Title = styled.span`\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.ms};\n\tcolor: ${({ theme }) => theme.PALETTE.gray[300]};\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\twidth: 80%;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.ml};\n\t}\n`;\n\nexport const ImportantBox = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 6px;\n\n\t& img {\n\t\twidth: 15px;\n\t}\n`;\n\nexport const Important = styled.div`\n\twidth: 28px;\n\theight: 14px;\n\t${flexCenter}\n\tbackground-color: ${({ theme }) => theme.PALETTE.orange[100]};\n\tcolor: ${({ theme }) => theme.PALETTE.white[100]};\n\tborder-radius: 15px;\n\tfont-weight: 500;\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.xxs};\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 41px;\n\t\theight: 20px;\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.s};\n\t}\n`;\n\nexport const Content = styled.div`\n\twidth: 100%;\n\t${flexSpaceBetweenCenter}\n\tgap: 7px;\n\n\t@media screen and (min-width: 768px) {\n\t\tgap: 14px;\n\t}\n`;\n\nexport const Description = styled.div`\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.s};\n\twidth: calc(100% - 80px);\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\tcolor: ${({ theme }) => theme.PALETTE.gray[100]};\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.m};\n\t\twidth: calc(100% - 104px);\n\t}\n`;\n\nexport const Date = styled.div`\n\tfont-size: ${({ theme }) => theme.FONT_SIZE.s};\n\twidth: 80px;\n\tcolor: ${({ theme }) => theme.PALETTE.gray[100]};\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: ${({ theme }) => theme.FONT_SIZE.ms};\n\t\twidth: 104px;\n\t}\n`;\n","import { Link } from 'react-router-dom';\n\nimport LINK from 'constants/link';\n\nimport * as S from './index.styles';\n\nfunction NoticeList({ list }) {\n\treturn (\n\t\t<S.Body>\n\t\t\t{list.map(notice => (\n\t\t\t\t<S.Box key={notice.id}>\n\t\t\t\t\t<Link to={LINK.NOTICE_POST + `/${notice.id}`}>\n\t\t\t\t\t\t<S.ImportantBox>\n\t\t\t\t\t\t\t{notice.noticeContentType === '중요' ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<img src=\"/assets/icons/pin.svg\" alt=\"pin\" />\n\t\t\t\t\t\t\t\t\t<S.Important>중요</S.Important>\n\t\t\t\t\t\t\t\t\t<S.Title>{notice.title}</S.Title>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<S.Title>{notice.title}</S.Title>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</S.ImportantBox>\n\n\t\t\t\t\t\t<S.Content>\n\t\t\t\t\t\t\t<S.Description>{notice.content}</S.Description>\n\t\t\t\t\t\t\t<S.Date>{notice.createDate}</S.Date>\n\t\t\t\t\t\t</S.Content>\n\t\t\t\t\t</Link>\n\t\t\t\t</S.Box>\n\t\t\t))}\n\t\t</S.Body>\n\t);\n}\n\nexport default NoticeList;\n","import { useEffect, useState } from 'react';\n\nimport useFilter from 'hooks/useFilter';\nimport useInput from 'hooks/useInput';\nimport usePagination from 'hooks/usePagination';\nimport useApi from 'hooks/useApi';\n\nimport * as S from './index.styles';\n\nimport Title from 'components/@common/Title';\nimport Search from 'components/@common/Search';\nimport Filter from 'components/@common/Filter';\nimport NoticeList from 'components/pages/Notice/NoticeList';\nimport NoPost from 'components/@common/NoPost';\nimport Pagination from 'components/@common/Pagination';\n\nfunction Notice() {\n\tconst { sort, handelSelectFilter } = useFilter();\n\tconst { inputData, setInputData, handleChangeSearch } = useInput();\n\n\tconst [noticeList, setNoticeList] = useState([]);\n\tconst [navClicked, setNavClicked] = useState('전체');\n\n\tconst itemsPerPage = 8;\n\tconst { currentPage, setCurrentPage, total, setTotal } = usePagination();\n\n\t// 초기 api path\n\tconst basePath = `/client/notices/all?size=${itemsPerPage}&page=${currentPage}&sortBy=${sort}`;\n\n\t// 전체 중요 일반 선택\n\tconst noticeType =\n\t\tnavClicked !== '전체' ? `&noticeContentType=${navClicked}` : '';\n\n\t// 검색 데이터까지 있는 총 api path\n\tconst fullPath =\n\t\tbasePath + `&title=${inputData}&content=${inputData}&${noticeType}`;\n\n\tconst { result, trigger } = useApi({\n\t\tpath: basePath,\n\t\tshouldFetch: true,\n\t});\n\n\tuseEffect(() => {\n\t\tif (result.data) {\n\t\t\tsetNoticeList(result.data.noticeList);\n\t\t\tsetTotal(result.data.total);\n\t\t}\n\t}, [result.data]);\n\n\tuseEffect(() => {\n\t\ttrigger({ path: fullPath, applyResult: true });\n\t}, [sort, navClicked, currentPage]);\n\n\t// 전체 / 중요 / 일반\n\tconst handleClickNav = async e => {\n\t\tsetCurrentPage(1);\n\n\t\tconst { name } = e.target;\n\t\tsetNavClicked(name);\n\n\t\tconst noticeType = name === '전체' ? '' : `&noticeContentType=${name}`;\n\t\tawait trigger({ path: basePath + noticeType, applyResult: true });\n\t};\n\n\t// 검색\n\tconst handleClickSearch = async () => {\n\t\tsetCurrentPage(1);\n\t\tawait trigger({ path: fullPath, applyResult: true });\n\t};\n\n\t// 검색 초기화\n\tconst handleReset = async () => {\n\t\tsetInputData('');\n\t\tsetCurrentPage(1);\n\t\tawait trigger({ path: basePath + noticeType, applyResult: true });\n\t};\n\n\t// 페이지 이동\n\tconst handlePageChange = async pageNumber => {\n\t\tawait trigger({ path: fullPath, applyResult: true });\n\t\tsetCurrentPage(pageNumber);\n\t};\n\n\treturn (\n\t\t<S.Body>\n\t\t\t<Title title=\"NOTICE\">넷플레이스 공지사항 안내</Title>\n\n\t\t\t<S.MainBox>\n\t\t\t\t<S.Select>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<S.Li>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"전체\"\n\t\t\t\t\t\t\t\t\tchecked={navClicked === '전체'}\n\t\t\t\t\t\t\t\t\tonClick={handleClickNav}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t전체\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</S.Li>\n\t\t\t\t\t\t<S.Li>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"NOTICE_CONTENT_TYPE_01\"\n\t\t\t\t\t\t\t\t\tchecked={navClicked === 'NOTICE_CONTENT_TYPE_01'}\n\t\t\t\t\t\t\t\t\tonClick={handleClickNav}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t중요\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</S.Li>\n\t\t\t\t\t\t<S.Li>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"NOTICE_CONTENT_TYPE_02\"\n\t\t\t\t\t\t\t\t\tchecked={navClicked === 'NOTICE_CONTENT_TYPE_02'}\n\t\t\t\t\t\t\t\t\tonClick={handleClickNav}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t일반\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</S.Li>\n\t\t\t\t\t</ul>\n\t\t\t\t</S.Select>\n\n\t\t\t\t<Search\n\t\t\t\t\tsearch={inputData}\n\t\t\t\t\tonChange={handleChangeSearch}\n\t\t\t\t\tonClick={handleClickSearch}\n\t\t\t\t\treset={handleReset}\n\t\t\t\t/>\n\n\t\t\t\t<Filter sort={sort} onClick={handelSelectFilter} />\n\n\t\t\t\t{noticeList?.length ? (\n\t\t\t\t\t<NoticeList list={noticeList} />\n\t\t\t\t) : (\n\t\t\t\t\t<S.Div>\n\t\t\t\t\t\t<NoPost>\n\t\t\t\t\t\t\t{inputData\n\t\t\t\t\t\t\t\t? '해당하는 게시글이 없습니다.'\n\t\t\t\t\t\t\t\t: '등록된 게시글이 없습니다.'}\n\t\t\t\t\t\t</NoPost>\n\t\t\t\t\t</S.Div>\n\t\t\t\t)}\n\t\t\t</S.MainBox>\n\n\t\t\t{/* 페이지네이션 */}\n\t\t\t{noticeList?.length ? (\n\t\t\t\t<Pagination\n\t\t\t\t\ttotalItems={total}\n\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\tonPageChange={handlePageChange}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t</S.Body>\n\t);\n}\n\nexport default Notice;\n"],"names":["Body","styled","div","_templateObject","_taggedTemplateLiteral","flexAlignCenter","Sort","_templateObject2","_ref","theme","FONT_SIZE","s","flexCenter","_ref2","selected","PALETTE","orange","gray","_ref3","_ref4","m","props","onClick","sort","filterName","useFilter","result","useApi","path","concat","shouldFetch","filter","setFilter","useState","useEffect","data","globalConstantList","_jsx","S","children","map","flt","_jsxs","codeValue","codeLabel","id","usePathname","useMemo","toUpperCase","replace","setSort","handelSelectFilter","e","value","currentTarget","getAttribute","bodyContainer","flexColumn","MainBox","Select","_templateObject3","after","css","_templateObject4","Li","li","_templateObject5","_ref5","_ref6","Div","_templateObject6","_ref7","Box","Title","span","ms","ml","ImportantBox","Important","white","_ref8","xxs","_ref9","Content","flexSpaceBetweenCenter","Description","_templateObject7","_ref10","_ref11","_ref12","Date","_templateObject8","_ref13","_ref14","_ref15","list","notice","Link","to","LINK","NOTICE_POST","noticeContentType","_Fragment","src","alt","title","content","createDate","inputData","setInputData","handleChangeSearch","useInput","noticeList","setNoticeList","navClicked","setNavClicked","currentPage","setCurrentPage","total","setTotal","usePagination","basePath","noticeType","fullPath","trigger","applyResult","handleClickNav","async","name","target","type","checked","Search","search","onChange","reset","Filter","length","NoticeList","NoPost","Pagination","totalItems","itemsPerPage","onPageChange","pageNumber"],"sourceRoot":""}